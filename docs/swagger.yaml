definitions:
  controller.Controller:
    type: object
  model.CreateOrderBody:
    properties:
      address:
        type: string
      menuName:
        items:
          type: string
        type: array
      phone:
        type: string
    required:
    - address
    - menuName
    - phone
    type: object
  model.CreateReviewBody:
    properties:
      isRecommend:
        type: boolean
      review:
        type: string
      score:
        type: integer
    type: object
  model.Menu:
    properties:
      canBeOrder:
        type: boolean
      createdAt:
        type: string
      id:
        type: string
      isDeleted:
        type: boolean
      name:
        type: string
      origin:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      todayRecommend:
        type: boolean
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /orderer/v01/menus:
    get:
      consumes:
      - application/json
      description: 메뉴 조회 기능
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Menu'
            type: array
      summary: 메뉴를 조회합니다.
  /orderer/v01/order:
    post:
      consumes:
      - application/json
      description: 주문 기능
      parameters:
      - description: CreateOrderBody
        in: body
        name: CreateOrderBody
        required: true
        schema:
          $ref: '#/definitions/model.CreateOrderBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: 원하는 메뉴를 주문합니다.
  /orderer/v01/order/{id}:
    patch:
      consumes:
      - application/json
      description: 주문을 추가하는 기능
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: 기존 주문에 새로운 주문을 추가합니다.
    put:
      consumes:
      - application/json
      description: 주문 수정 기능
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: MenuName
        in: body
        name: MenuName
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: 이미 전달한 주문을 수정합니다.
  /orderer/v01/order/state:
    get:
      consumes:
      - application/json
      description: 주문 상태 조회 기능
      parameters:
      - description: Phone
        in: query
        name: phone
        required: true
        type: string
      - description: Address
        in: query
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 주문 상태를 조회합니다.
  /orderer/v01/reviews:
    get:
      consumes:
      - application/json
      description: 리뷰 조회 기능
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Controller'
      summary: 리뷰를 조회합니다.
  /orderer/v01/reviews/{orderId}:
    post:
      consumes:
      - application/json
      description: 리뷰 기능
      parameters:
      - description: orderId
        in: path
        name: orderId
        required: true
        type: string
      - description: CreateReviewBody
        in: body
        name: CreateReviewBody
        required: true
        schema:
          $ref: '#/definitions/model.CreateReviewBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 리뷰를 작성합니다.
  /receipient/v01/menus:
    post:
      consumes:
      - application/json
      description: 메뉴 추가 가능
      parameters:
      - description: Menu
        in: body
        name: Menu
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 기존 메뉴에 새로운 메뉴를 추가합니다.
  /receipient/v01/menus/{name}:
    delete:
      consumes:
      - application/json
      description: 메뉴 삭제 기능
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 메뉴를 삭제합니다.
    patch:
      consumes:
      - application/json
      description: 메뉴 업데이트 가능
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: Menu
        in: body
        name: Menu
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 기존 메뉴를 수정합니다.
  /receipient/v01/order:
    get:
      consumes:
      - application/json
      description: 주문 조회 기능
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 전체 주문을 조회합니다.
  /receipient/v01/order/{id}/state:
    patch:
      consumes:
      - application/json
      description: 주문 상태 업데이트 기능
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 주문 받은 상태를 업데이트합니다.
swagger: "2.0"
